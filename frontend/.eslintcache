[{"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\index.tsx":"1","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\App.tsx":"2","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\Router.tsx":"4","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\config\\Api.ts":"5","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\UserService.ts":"6","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\AuthorityService.ts":"7","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\PrivateRoute.tsx":"8","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserPage.tsx":"9","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\HomePage.tsx":"10","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"11","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserTable.tsx":"12","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx":"13","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\CreateCoverLetterPage.tsx":"14","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\GeneratedCoverLetterPage.tsx":"15","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\GeneralBox.tsx":"16","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\organisms\\CoverLetterForm.tsx":"17","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\organisms\\CoverLetterContentBox.tsx":"18","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\GridMapping.tsx":"19","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\CoverLetterService.tsx":"20"},{"size":382,"mtime":1687248522546,"results":"21","hashOfConfig":"22"},{"size":635,"mtime":1689017311720,"results":"23","hashOfConfig":"22"},{"size":6317,"mtime":1687248522540,"results":"24","hashOfConfig":"22"},{"size":1742,"mtime":1689018645634,"results":"25","hashOfConfig":"22"},{"size":1822,"mtime":1689021407550,"results":"26","hashOfConfig":"22"},{"size":653,"mtime":1687248522542,"results":"27","hashOfConfig":"22"},{"size":1174,"mtime":1687248522541,"results":"28","hashOfConfig":"22"},{"size":2385,"mtime":1687248522540,"results":"29","hashOfConfig":"22"},{"size":1114,"mtime":1687248522545,"results":"30","hashOfConfig":"22"},{"size":913,"mtime":1689017311740,"results":"31","hashOfConfig":"22"},{"size":3423,"mtime":1687248522544,"results":"32","hashOfConfig":"22"},{"size":1936,"mtime":1687248522545,"results":"33","hashOfConfig":"22"},{"size":3345,"mtime":1687248522543,"results":"34","hashOfConfig":"22"},{"size":1562,"mtime":1689018924672,"results":"35","hashOfConfig":"22"},{"size":483,"mtime":1689019576240,"results":"36","hashOfConfig":"22"},{"size":700,"mtime":1689017311726,"results":"37","hashOfConfig":"22"},{"size":1535,"mtime":1689017311732,"results":"38","hashOfConfig":"22"},{"size":914,"mtime":1689018905879,"results":"39","hashOfConfig":"22"},{"size":1049,"mtime":1689019842703,"results":"40","hashOfConfig":"22"},{"size":364,"mtime":1689021163488,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dqsccf",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\index.tsx",[],["89","90"],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\App.tsx",["91"],"import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport { ActiveUserContextProvider } from './Contexts/ActiveUserContext';\r\nimport Router from './Router/Router';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const navigate = useNavigate();\r\n  return (\r\n    <ActiveUserContextProvider>\r\n        <header className=\"app-header\">\r\n            <div className=\"header-image\"></div>\r\n            <a href={\"/\"} className=\"app-name\">Letterix</a>\r\n        </header>\r\n        <div className=\"app-background\">\r\n            <Router />\r\n        </div>\r\n    </ActiveUserContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Contexts\\ActiveUserContext.tsx",["92"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      setActiveUser(response.data);\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\Router.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\config\\Api.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\UserService.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\AuthorityService.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\PrivateRoute.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\HomePage.tsx",["93"],"import { Box, flexbox } from '@mui/system';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport './ClickableText.css';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n\r\nexport default function HomePage() {\r\n  const history = useNavigate();\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setExpand(true);\r\n    setTimeout(() => {\r\n      history('/createCoverLetter');\r\n    }, 300); // Change the duration as needed\r\n\r\n  };\r\n  return (\r\n      <Box onClick={handleClick} style={{alignItems:\"center\", height: \"100%\"}}>\r\n      <div className={`icon-container ${expand ? 'expand' : ''}`}>\r\n        <CreateIcon sx={{fontSize:\"10rem\", color: \"#05386B\"}}/>\r\n      </div>\r\n          <h3 style={{color: \"#05386B\", fontSize: \"3rem\", marginTop: \"12rem\", marginLeft:\"26%\"}}>Click the pencil to create a cover letter!</h3>\r\n      </Box>\r\n  );\r\n}\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\CreateCoverLetterPage.tsx",["94","95","96","97","98","99","100"],"import {Button, FormControl, Grid, TextField, Box} from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport {CoverLetterModel} from \"../../../types/models/CoverLetterModel.model\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CoverLetterForm from \"../../organisms/CoverLetterForm\";\r\nimport GeneralBox from \"../../molecules/GeneralBox\";\r\nimport CoverLetterService from \"../../../Services/CoverLetterService\";\r\nimport {useState} from \"react\";\r\nimport {ChatCompletionModel} from \"../../../types/models/ChatCompletion.model\";\r\n\r\n\r\nexport const initialCoverLetterValues: any = {\r\n    id: '',\r\n    name: '',\r\n    surname: '',\r\n    age: '',\r\n    appliedCompany: '',\r\n    position: '',\r\n    currentEducationLevel: '',\r\n    skills: '',\r\n    interests: '',\r\n    weaknesses: '',\r\n};\r\n\r\nconst CoverLetter = () => {\r\n    const navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: initialCoverLetterValues,\r\n        onSubmit: (values) => {\r\n            const coverLetter = values as CoverLetterModel;\r\n            coverLetter.skills = values.skills.split(',');\r\n            coverLetter.weaknesses =values.weaknesses.split(',');\r\n            coverLetter.interests = values.interests.split(',');\r\n            CoverLetterService.addCoverLetter(coverLetter).then((res) => {\r\n                navigate(\"/generatedCoverLetter/\"+res.data);\r\n            });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <GeneralBox title={\"Create cover letter\"} content={<CoverLetterForm formik={formik}/>}/>\r\n    );\r\n};\r\n\r\nexport default CoverLetter;\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\GeneratedCoverLetterPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\GeneralBox.tsx",["101"],"import {Box} from \"@mui/material\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst GeneralBox = ({content , title}: any) => {\r\n    return (\r\n        <Box sx={{ justifyContent: \"center\", marginTop: 10, marginLeft: 45, width: \"60%\", padding: 5, border: \"2px solid transparent\",\r\n            borderRadius: \"3%\",\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\", justifySelf:\"center\",\r\n            background: \"linear-gradient(70deg, #F1F9E8, #D6FEFD)\"}}>\r\n            <div>\r\n                <h1 style={{color: \"#05386B\"}}>\r\n                    {title}\r\n                </h1>\r\n                    {content}\r\n\r\n            </div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GeneralBox;\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\organisms\\CoverLetterForm.tsx",["102","103","104"],"import {Button, FormControl, Grid, TextField, Box} from \"@mui/material\";\r\nimport GridMapping from \"../molecules/GridMapping\";\r\n\r\nconst formFields = [\r\n    {\r\n        label: 'Your Details',\r\n        fields: [\r\n            { label: 'Name', name: 'name' },\r\n            { label: 'Surname', name: 'surname' },\r\n            { label: 'Age', name: 'age', type: 'number' },\r\n        ],\r\n    },\r\n    {\r\n        label: 'Your Character',\r\n        fields: [\r\n            { label: 'Skills', name: 'skills' },\r\n            { label: 'Interests', name: 'interests' },\r\n            { label: 'Weaknesses', name: 'weaknesses' },\r\n        ],\r\n    },\r\n    {\r\n        label: 'Your Future',\r\n        fields: [\r\n            { label: 'Applying company', name: 'appliedCompany' },\r\n            { label: 'Applying position', name: 'position' },\r\n            { label: 'Education level', name: 'currentEducationLevel' },\r\n        ],\r\n    },\r\n];\r\n\r\nconst CoverLetterForm = ({formik}: any) => {\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Grid container sx={{ backgroundColor: 'white', borderRadius: '3%', padding: 5 }}>\r\n                <GridMapping formFields={formFields} formik={formik} />\r\n                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n                        Submit\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CoverLetterForm;\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\organisms\\CoverLetterContentBox.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\GridMapping.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\CoverLetterService.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":11,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":172,"column":6,"nodeType":"115","endLine":172,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":1,"column":15,"nodeType":"111","messageId":"112","endLine":1,"endColumn":22},{"ruleId":"109","severity":1,"message":"118","line":1,"column":9,"nodeType":"111","messageId":"112","endLine":1,"endColumn":15},{"ruleId":"109","severity":1,"message":"119","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"120","line":1,"column":30,"nodeType":"111","messageId":"112","endLine":1,"endColumn":34},{"ruleId":"109","severity":1,"message":"121","line":1,"column":36,"nodeType":"111","messageId":"112","endLine":1,"endColumn":45},{"ruleId":"109","severity":1,"message":"122","line":1,"column":47,"nodeType":"111","messageId":"112","endLine":1,"endColumn":50},{"ruleId":"109","severity":1,"message":"123","line":8,"column":9,"nodeType":"111","messageId":"112","endLine":8,"endColumn":17},{"ruleId":"109","severity":1,"message":"124","line":9,"column":9,"nodeType":"111","messageId":"112","endLine":9,"endColumn":28},{"ruleId":"109","severity":1,"message":"125","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"119","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"121","line":1,"column":36,"nodeType":"111","messageId":"112","endLine":1,"endColumn":45},{"ruleId":"109","severity":1,"message":"122","line":1,"column":47,"nodeType":"111","messageId":"112","endLine":1,"endColumn":50},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'flexbox' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'useState' is defined but never used.","'ChatCompletionModel' is defined but never used.","'useNavigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [loadActiveUser]",{"range":"131","text":"132"},[5561,5563],"[loadActiveUser]"]