[{"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\index.tsx":"1","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\App.tsx":"2","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\Router.tsx":"4","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\config\\Api.ts":"5","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\UserService.ts":"6","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\AuthorityService.ts":"7","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\PrivateRoute.tsx":"8","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserPage.tsx":"9","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\HomePage.tsx":"10","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"11","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserTable.tsx":"12","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx":"13","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\CreateCoverLetterPage.tsx":"14","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\GeneratedCoverLetterPage.tsx":"15"},{"size":382,"mtime":1687248522546,"results":"16","hashOfConfig":"17"},{"size":542,"mtime":1688977914321,"results":"18","hashOfConfig":"17"},{"size":6317,"mtime":1687248522540,"results":"19","hashOfConfig":"17"},{"size":1725,"mtime":1688980813737,"results":"20","hashOfConfig":"17"},{"size":1817,"mtime":1687248522545,"results":"21","hashOfConfig":"17"},{"size":653,"mtime":1687248522542,"results":"22","hashOfConfig":"17"},{"size":1174,"mtime":1687248522541,"results":"23","hashOfConfig":"17"},{"size":2385,"mtime":1687248522540,"results":"24","hashOfConfig":"17"},{"size":1114,"mtime":1687248522545,"results":"25","hashOfConfig":"17"},{"size":937,"mtime":1688983870310,"results":"26","hashOfConfig":"17"},{"size":3423,"mtime":1687248522544,"results":"27","hashOfConfig":"17"},{"size":1936,"mtime":1687248522545,"results":"28","hashOfConfig":"17"},{"size":3345,"mtime":1687248522543,"results":"29","hashOfConfig":"17"},{"size":5475,"mtime":1688979452069,"results":"30","hashOfConfig":"17"},{"size":3388,"mtime":1688984055720,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1dqsccf",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\index.tsx",[],["64","65"],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\App.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Contexts\\ActiveUserContext.tsx",["66"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      setActiveUser(response.data);\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\Router.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\config\\Api.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\UserService.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Services\\AuthorityService.ts",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\Router\\PrivateRoute.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\HomePage.tsx",["67"],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\CreateCoverLetterPage.tsx",[],"C:\\School\\Modul347\\M347-Projekt\\frontend\\src\\components\\pages\\CoverLetterPage\\GeneratedCoverLetterPage.tsx",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":172,"column":6,"nodeType":"75","endLine":172,"endColumn":8,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":15,"nodeType":"79","messageId":"80","endLine":1,"endColumn":22},{"ruleId":"77","severity":1,"message":"81","line":1,"column":22,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["84"],"@typescript-eslint/no-unused-vars","'flexbox' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [loadActiveUser]",{"range":"87","text":"88"},[5561,5563],"[loadActiveUser]"]